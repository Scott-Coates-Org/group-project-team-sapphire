import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
import { addDoc, collection } from "firebase/firestore";
import { db, storage } from "../firebase/client";
import { getDownloadURL, ref, uploadBytes } from "firebase/storage";

export const createRoom = createAsyncThunk(
  "rooms/create",
  async (formData, { rejectWithValue }) => {
    try {
      const roomsRef = ref(storage, "rooms/" + formData.photo.name);

      const { name, capacity, photo } = formData;

      const snapshot = await uploadBytes(roomsRef, photo);
      const photoLink = await getDownloadURL(snapshot.ref);

      return await addDoc(collection(db, "rooms"), {
        name,
        capacity,
        photo: photoLink,
      });
    } catch (error) {
      return rejectWithValue(error);
    }
  }
);

export const getRooms = createAsyncThunk(
  "rooms/list",
  async ({ rejectWithValue }) => {}
);

const roomsSlice = createSlice({
  name: "rooms",
  initialState: {
    rooms: [],
    loading: "idle",
  },
  extraReducers: {
    [createRoom.pending]: (state, action) => {
      state.loading = "pending";
    },
    [createRoom.fulfilled]: (state, action) => {
      state.loading = "succeeded";
    },
    [createRoom.rejected]: (state, action) => {
      state.loading = "failed";
    },
  },
});

export default roomsSlice.reducer;

// // Add a new document in collection "demoUsers"
// const _createTestUser = async (user) => {
//   // setDoc gives you control of documents id, if you want autogenerated id's see addDoc https://firebase.google.com/docs/firestore/manage-data/add-data#web-version-9
//   await setDoc(doc(db, 'demoUsers', String(user.id)), user)
//   console.log('Document written with ID: ', user.id)
// }
